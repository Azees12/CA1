2018-03-12 02:44:18 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Table "PLAY_EVOLUTIONS" not found; SQL statement:
select id, hash, apply_script, revert_script, state, last_problem from play_evolutions where state like 'applying_%' [42102-193]
2018-03-12 02:49:45 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO employee (`id`, `email`, `name`, `department_id`) VALUES (8, 'o\'keefe.una@example.com', 'Maximillian Dickinson', 6);
INSERT INTO employee (`id`, `email`, `name`, `department_id`) VALUES (9, 'jairo.bins@example.com', 'Rae Ortiz', 5);
INSERT INTO employee (`id`, `email`, `name`, `department_id`) VALUES (10, 'gustave41@example.org', 'Jasper Rolfson', 1);
INSERT INTO employee (`id`, `email`, `name`, `department_id`) VALUES (11, 'wisoky.bertha@example.net', 'Nya Ward', 5);
INSERT INTO employee (`id`, `email`, `name`, `department_id`) VALUES (12, 'qkoelpin@example.com', 'Mrs. Gisselle Bailey', 4);
INSERT INTO employee (`id`, `email`, `name`, `department_id`) VALUES (13, 'tierra68@example.com', 'Isai Hamill', 3);
INSERT INTO employee (`id`, `email`, `name`, `department_id`) VALUES (14, 'katheryn55@example.com', 'Ms. Addie Frami', 2);
INSERT INTO employee (`id`, `email`, `name`, `department_id`) VALUES (15, 'jude34@example.net', 'Gaston Mohr', 6);


INSERT INTO project (`id`, `name`) VALUES (1, 'Down-sized fresh-thinking implementation');
INSERT INTO project (`id`, `name`) VALUES (2, 'Optimized client-driven capacity');
INSERT INTO project (`id`, `name`) VALUES (3, 'Mandatory 3rdgeneration complexity');
INSERT INTO project (`id`, `name`) VALUES (4, 'Compatible multi-state portal');


INSERT INTO project_employee (`project_id`, `employee_id`) VALUES (1, 1);
INSERT INTO project_employee (`project_id`, `employee_id`) VALUES (1, 3);
INSERT INTO project_employee (`project_id`, `employee_id`) VALUES (1, 4);
INSERT INTO project_employee (`project_id`, `employee_id`) VALUES (1, 8);
INSERT INTO project_employee (`project_id`, `employee_id`) VALUES (1, 15);
INSERT INTO project_employee (`project_id`, `employee_id`) VALUES (2, 12);
INSERT INTO project_employee (`project_id`, `employee_id`) VALUES (3, 1);
INSERT INTO project_employee (`project_id`, `employee_id`) VALUES (3, 4);
INSERT INTO project_employee (`project_id`, `employee_id`) VALUES (3, 10);
INSERT INTO project_employee (`project_id`, `employee_id`) VALUES (3, 12);
INSERT INTO project_employee (`project_id`, `employee_id`) VALUES (4, 2);
INSERT INTO project_employee (`project_id`, `employee_id`) VALUES (4, 4);
INSERT INTO project_employee (`project_id`, `employee_id`) VALUES (4, 9);
INSERT INTO project_employee (`project_id`, `employee_id`) VALUES (4, 13);



INSERT INTO user (`role`, `email`, `name`, `password`, `age`) VALUES (NULL, 'abernathy.brianne@example.net', 'Lillian Grady PhD', 'Sierra Leone', '747610306');
INSERT INTO user (`role`, `email`, `name`, `password`, `age`) VALUES (NULL, 'adell35@example.net', 'Lucius Wehner', 'Germany', '2');
INSERT INTO user (`role`, `email`, `name`, `password`, `age`) VALUES (NULL, 'audreanne.moore@example.org', 'Miss Annalise Altenwerth', 'Monaco', '2071');
INSERT INTO user (`role`, `email`, `name`, `password`, `age`) VALUES (NULL, 'elizabeth20@example.net', 'Sherman Veum', 'Palestinian Territory', '11[*]');"; SQL statement:
INSERT INTO employee (`id`, `email`, `name`, `department_id`) VALUES (8, 'o\'keefe.una@example.com', 'Maximillian Dickinson', 6);
INSERT INTO employee (`id`, `email`, `name`, `department_id`) VALUES (9, 'jairo.bins@example.com', 'Rae Ortiz', 5);
INSERT INTO employee (`id`, `email`, `name`, `department_id`) VALUES (10, 'gustave41@example.org', 'Jasper Rolfson', 1);
INSERT INTO employee (`id`, `email`, `name`, `department_id`) VALUES (11, 'wisoky.bertha@example.net', 'Nya Ward', 5);
INSERT INTO employee (`id`, `email`, `name`, `department_id`) VALUES (12, 'qkoelpin@example.com', 'Mrs. Gisselle Bailey', 4);
INSERT INTO employee (`id`, `email`, `name`, `department_id`) VALUES (13, 'tierra68@example.com', 'Isai Hamill', 3);
INSERT INTO employee (`id`, `email`, `name`, `department_id`) VALUES (14, 'katheryn55@example.com', 'Ms. Addie Frami', 2);
INSERT INTO employee (`id`, `email`, `name`, `department_id`) VALUES (15, 'jude34@example.net', 'Gaston Mohr', 6);


INSERT INTO project (`id`, `name`) VALUES (1, 'Down-sized fresh-thinking implementation');
INSERT INTO project (`id`, `name`) VALUES (2, 'Optimized client-driven capacity');
INSERT INTO project (`id`, `name`) VALUES (3, 'Mandatory 3rdgeneration complexity');
INSERT INTO project (`id`, `name`) VALUES (4, 'Compatible multi-state portal');


INSERT INTO project_employee (`project_id`, `employee_id`) VALUES (1, 1);
INSERT INTO project_employee (`project_id`, `employee_id`) VALUES (1, 3);
INSERT INTO project_employee (`project_id`, `employee_id`) VALUES (1, 4);
INSERT INTO project_employee (`project_id`, `employee_id`) VALUES (1, 8);
INSERT INTO project_employee (`project_id`, `employee_id`) VALUES (1, 15);
INSERT INTO project_employee (`project_id`, `employee_id`) VALUES (2, 12);
INSERT INTO project_employee (`project_id`, `employee_id`) VALUES (3, 1);
INSERT INTO project_employee (`project_id`, `employee_id`) VALUES (3, 4);
INSERT INTO project_employee (`project_id`, `employee_id`) VALUES (3, 10);
INSERT INTO project_employee (`project_id`, `employee_id`) VALUES (3, 12);
INSERT INTO project_employee (`project_id`, `employee_id`) VALUES (4, 2);
INSERT INTO project_employee (`project_id`, `employee_id`) VALUES (4, 4);
INSERT INTO project_employee (`project_id`, `employee_id`) VALUES (4, 9);
INSERT INTO project_employee (`project_id`, `employee_id`) VALUES (4, 13);



INSERT INTO user (`role`, `email`, `name`, `password`, `age`) VALUES (NULL, 'abernathy.brianne@example.net', 'Lillian Grady PhD', 'Sierra Leone', '747610306');
INSERT INTO user (`role`, `email`, `name`, `password`, `age`) VALUES (NULL, 'adell35@example.net', 'Lucius Wehner', 'Germany', '2');
INSERT INTO user (`role`, `email`, `name`, `password`, `age`) VALUES (NULL, 'audreanne.moore@example.org', 'Miss Annalise Altenwerth', 'Monaco', '2071');
INSERT INTO user (`role`, `email`, `name`, `password`, `age`) VALUES (NULL, 'elizabeth20@example.net', 'Sherman Veum', 'Palestinian Territory', '11'); [42000-193]
2018-03-12 02:54:31 jdbc[5]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "USER[*]"; expected "UPDATE, USE, {"; SQL statement:
USER [42001-193]
2018-03-12 03:11:26 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO employee (`id`, `email`, `name`, `department_id`) VALUES (8, 'o\'keefe.una@example.com', 'Maximillian Dickinson', 6);
INSERT INTO employee (`id`, `email`, `name`, `department_id`) VALUES (9, 'jairo.bins@example.com', 'Rae Ortiz', 5);
INSERT INTO employee (`id`, `email`, `name`, `department_id`) VALUES (10, 'gustave41@example.org', 'Jasper Rolfson', 1);
INSERT INTO employee (`id`, `email`, `name`, `department_id`) VALUES (11, 'wisoky.bertha@example.net', 'Nya Ward', 5);
INSERT INTO employee (`id`, `email`, `name`, `department_id`) VALUES (12, 'qkoelpin@example.com', 'Mrs. Gisselle Bailey', 4);
INSERT INTO employee (`id`, `email`, `name`, `department_id`) VALUES (13, 'tierra68@example.com', 'Isai Hamill', 3);
INSERT INTO employee (`id`, `email`, `name`, `department_id`) VALUES (14, 'katheryn55@example.com', 'Ms. Addie Frami', 2);
INSERT INTO employee (`id`, `email`, `name`, `department_id`) VALUES (15, 'jude34@example.net', 'Gaston Mohr', 6);


INSERT INTO project (`id`, `name`) VALUES (1, 'Down-sized fresh-thinking implementation');
INSERT INTO project (`id`, `name`) VALUES (2, 'Optimized client-driven capacity');
INSERT INTO project (`id`, `name`) VALUES (3, 'Mandatory 3rdgeneration complexity');
INSERT INTO project (`id`, `name`) VALUES (4, 'Compatible multi-state portal');


INSERT INTO project_employee (`project_id`, `employee_id`) VALUES (1, 1);
INSERT INTO project_employee (`project_id`, `employee_id`) VALUES (1, 3);
INSERT INTO project_employee (`project_id`, `employee_id`) VALUES (1, 4);
INSERT INTO project_employee (`project_id`, `employee_id`) VALUES (1, 8);
INSERT INTO project_employee (`project_id`, `employee_id`) VALUES (1, 15);
INSERT INTO project_employee (`project_id`, `employee_id`) VALUES (2, 12);
INSERT INTO project_employee (`project_id`, `employee_id`) VALUES (3, 1);
INSERT INTO project_employee (`project_id`, `employee_id`) VALUES (3, 4);
INSERT INTO project_employee (`project_id`, `employee_id`) VALUES (3, 10);
INSERT INTO project_employee (`project_id`, `employee_id`) VALUES (3, 12);
INSERT INTO project_employee (`project_id`, `employee_id`) VALUES (4, 2);
INSERT INTO project_employee (`project_id`, `employee_id`) VALUES (4, 4);
INSERT INTO project_employee (`project_id`, `employee_id`) VALUES (4, 9);
INSERT INTO project_employee (`project_id`, `employee_id`) VALUES (4, 13);



INSERT INTO user (`role`, `email`, `name`, `password`, `age`) VALUES (NULL, 'abernathy.brianne@example.net', 'Lillian Grady PhD', 'Sierra Leone', '747610306');
INSERT INTO user (`role`, `email`, `name`, `password`, `age`) VALUES (NULL, 'adell35@example.net', 'Lucius Wehner', 'Germany', '2');
INSERT INTO user (`role`, `email`, `name`, `password`, `age`) VALUES (NULL, 'audreanne.moore@example.org', 'Miss Annalise Altenwerth', 'Monaco', '2071');
INSERT INTO user (`role`, `email`, `name`, `password`, `age`) VALUES (NULL, 'elizabeth20@example.net', 'Sherman Veum', 'Palestinian Territory', '11[*]');"; SQL statement:
INSERT INTO employee (`id`, `email`, `name`, `department_id`) VALUES (8, 'o\'keefe.una@example.com', 'Maximillian Dickinson', 6);
INSERT INTO employee (`id`, `email`, `name`, `department_id`) VALUES (9, 'jairo.bins@example.com', 'Rae Ortiz', 5);
INSERT INTO employee (`id`, `email`, `name`, `department_id`) VALUES (10, 'gustave41@example.org', 'Jasper Rolfson', 1);
INSERT INTO employee (`id`, `email`, `name`, `department_id`) VALUES (11, 'wisoky.bertha@example.net', 'Nya Ward', 5);
INSERT INTO employee (`id`, `email`, `name`, `department_id`) VALUES (12, 'qkoelpin@example.com', 'Mrs. Gisselle Bailey', 4);
INSERT INTO employee (`id`, `email`, `name`, `department_id`) VALUES (13, 'tierra68@example.com', 'Isai Hamill', 3);
INSERT INTO employee (`id`, `email`, `name`, `department_id`) VALUES (14, 'katheryn55@example.com', 'Ms. Addie Frami', 2);
INSERT INTO employee (`id`, `email`, `name`, `department_id`) VALUES (15, 'jude34@example.net', 'Gaston Mohr', 6);


INSERT INTO project (`id`, `name`) VALUES (1, 'Down-sized fresh-thinking implementation');
INSERT INTO project (`id`, `name`) VALUES (2, 'Optimized client-driven capacity');
INSERT INTO project (`id`, `name`) VALUES (3, 'Mandatory 3rdgeneration complexity');
INSERT INTO project (`id`, `name`) VALUES (4, 'Compatible multi-state portal');


INSERT INTO project_employee (`project_id`, `employee_id`) VALUES (1, 1);
INSERT INTO project_employee (`project_id`, `employee_id`) VALUES (1, 3);
INSERT INTO project_employee (`project_id`, `employee_id`) VALUES (1, 4);
INSERT INTO project_employee (`project_id`, `employee_id`) VALUES (1, 8);
INSERT INTO project_employee (`project_id`, `employee_id`) VALUES (1, 15);
INSERT INTO project_employee (`project_id`, `employee_id`) VALUES (2, 12);
INSERT INTO project_employee (`project_id`, `employee_id`) VALUES (3, 1);
INSERT INTO project_employee (`project_id`, `employee_id`) VALUES (3, 4);
INSERT INTO project_employee (`project_id`, `employee_id`) VALUES (3, 10);
INSERT INTO project_employee (`project_id`, `employee_id`) VALUES (3, 12);
INSERT INTO project_employee (`project_id`, `employee_id`) VALUES (4, 2);
INSERT INTO project_employee (`project_id`, `employee_id`) VALUES (4, 4);
INSERT INTO project_employee (`project_id`, `employee_id`) VALUES (4, 9);
INSERT INTO project_employee (`project_id`, `employee_id`) VALUES (4, 13);



INSERT INTO user (`role`, `email`, `name`, `password`, `age`) VALUES (NULL, 'abernathy.brianne@example.net', 'Lillian Grady PhD', 'Sierra Leone', '747610306');
INSERT INTO user (`role`, `email`, `name`, `password`, `age`) VALUES (NULL, 'adell35@example.net', 'Lucius Wehner', 'Germany', '2');
INSERT INTO user (`role`, `email`, `name`, `password`, `age`) VALUES (NULL, 'audreanne.moore@example.org', 'Miss Annalise Altenwerth', 'Monaco', '2071');
INSERT INTO user (`role`, `email`, `name`, `password`, `age`) VALUES (NULL, 'elizabeth20@example.net', 'Sherman Veum', 'Palestinian Territory', '11'); [42000-193]
2018-03-12 03:13:23 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "PROJECT_EMPLOYEE" not found; SQL statement:
INSERT INTO project_employee (`project_id`, `employee_id`) VALUES (1, 1) [42102-193]
2018-03-12 03:13:23 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "PROJECT_EMPLOYEE" not found; SQL statement:
INSERT INTO project_employee (`project_id`, `employee_id`) VALUES (1, 3) [42102-193]
2018-03-12 03:13:23 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "PROJECT_EMPLOYEE" not found; SQL statement:
INSERT INTO project_employee (`project_id`, `employee_id`) VALUES (1, 4) [42102-193]
2018-03-12 03:13:23 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "PROJECT_EMPLOYEE" not found; SQL statement:
INSERT INTO project_employee (`project_id`, `employee_id`) VALUES (1, 8) [42102-193]
2018-03-12 03:13:23 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "PROJECT_EMPLOYEE" not found; SQL statement:
INSERT INTO project_employee (`project_id`, `employee_id`) VALUES (1, 15) [42102-193]
2018-03-12 03:13:23 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "PROJECT_EMPLOYEE" not found; SQL statement:
INSERT INTO project_employee (`project_id`, `employee_id`) VALUES (2, 12) [42102-193]
2018-03-12 03:13:23 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "PROJECT_EMPLOYEE" not found; SQL statement:
INSERT INTO project_employee (`project_id`, `employee_id`) VALUES (3, 1) [42102-193]
2018-03-12 03:13:23 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "PROJECT_EMPLOYEE" not found; SQL statement:
INSERT INTO project_employee (`project_id`, `employee_id`) VALUES (3, 4) [42102-193]
2018-03-12 03:13:23 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "PROJECT_EMPLOYEE" not found; SQL statement:
INSERT INTO project_employee (`project_id`, `employee_id`) VALUES (3, 10) [42102-193]
2018-03-12 03:13:23 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "PROJECT_EMPLOYEE" not found; SQL statement:
INSERT INTO project_employee (`project_id`, `employee_id`) VALUES (3, 12) [42102-193]
2018-03-12 03:13:23 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "PROJECT_EMPLOYEE" not found; SQL statement:
INSERT INTO project_employee (`project_id`, `employee_id`) VALUES (4, 2) [42102-193]
2018-03-12 03:13:23 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "PROJECT_EMPLOYEE" not found; SQL statement:
INSERT INTO project_employee (`project_id`, `employee_id`) VALUES (4, 4) [42102-193]
2018-03-12 03:13:23 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "PROJECT_EMPLOYEE" not found; SQL statement:
INSERT INTO project_employee (`project_id`, `employee_id`) VALUES (4, 9) [42102-193]
2018-03-12 03:13:23 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "PROJECT_EMPLOYEE" not found; SQL statement:
INSERT INTO project_employee (`project_id`, `employee_id`) VALUES (4, 13) [42102-193]
2018-03-12 03:52:32 jdbc[67]: null
org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-193]
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:184)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:126)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:99)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:117)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:123)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:375)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:204)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:459)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:533)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:114)
	at com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:82)
	at play.api.db.HikariCPConnectionPool.$anonfun$create$1(HikariCPModule.scala:51)
	at scala.util.Try$.apply(Try.scala:209)
	at play.api.db.HikariCPConnectionPool.create(HikariCPModule.scala:47)
	at play.api.db.PooledDatabase.createDataSource(Databases.scala:199)
	at play.api.db.DefaultDatabase.dataSource$lzycompute(Databases.scala:123)
	at play.api.db.DefaultDatabase.dataSource(Databases.scala:121)
	at play.api.db.DefaultDatabase.getConnection(Databases.scala:142)
	at play.api.db.DefaultDatabase.getConnection(Databases.scala:138)
	at play.api.db.DefaultDBApi.$anonfun$connect$1(DefaultDBApi.scala:44)
	at play.api.db.DefaultDBApi.$anonfun$connect$1$adapted(DefaultDBApi.scala:42)
	at scala.collection.immutable.List.foreach(List.scala:389)
	at play.api.db.DefaultDBApi.connect(DefaultDBApi.scala:42)
	at play.api.db.DBApiProvider.get$lzycompute(DBModule.scala:86)
	at play.api.db.DBApiProvider.get(DBModule.scala:75)
	at play.api.db.DBApiProvider.get(DBModule.scala:56)
	at com.google.inject.internal.ProviderInternalFactory.provision(ProviderInternalFactory.java:81)
	at com.google.inject.internal.BoundProviderFactory.provision(BoundProviderFactory.java:72)
	at com.google.inject.internal.ProviderInternalFactory.circularGet(ProviderInternalFactory.java:61)
	at com.google.inject.internal.BoundProviderFactory.get(BoundProviderFactory.java:62)
	at com.google.inject.internal.SingleParameterInjector.inject(SingleParameterInjector.java:38)
	at com.google.inject.internal.SingleParameterInjector.getAll(SingleParameterInjector.java:62)
	at com.google.inject.internal.ConstructorInjector.provision(ConstructorInjector.java:110)
	at com.google.inject.internal.ConstructorInjector.construct(ConstructorInjector.java:90)
	at com.google.inject.internal.ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:268)
	at com.google.inject.internal.ProviderToInternalFactoryAdapter$1.call(ProviderToInternalFactoryAdapter.java:46)
	at com.google.inject.internal.InjectorImpl.callInContext(InjectorImpl.java:1092)
	at com.google.inject.internal.ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
	at com.google.inject.internal.SingletonScope$1.get(SingletonScope.java:194)
	at com.google.inject.internal.InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:41)
	at com.google.inject.internal.FactoryProxy.get(FactoryProxy.java:56)
	at com.google.inject.internal.SingleFieldInjector.inject(SingleFieldInjector.java:54)
	at com.google.inject.internal.MembersInjectorImpl.injectMembers(MembersInjectorImpl.java:132)
	at com.google.inject.internal.MembersInjectorImpl$1.call(MembersInjectorImpl.java:93)
	at com.google.inject.internal.MembersInjectorImpl$1.call(MembersInjectorImpl.java:80)
	at com.google.inject.internal.InjectorImpl.callInContext(InjectorImpl.java:1092)
	at com.google.inject.internal.MembersInjectorImpl.injectAndNotify(MembersInjectorImpl.java:80)
	at com.google.inject.internal.MembersInjectorImpl.injectMembers(MembersInjectorImpl.java:62)
	at com.google.inject.internal.InjectorImpl.injectMembers(InjectorImpl.java:987)
	at com.google.inject.util.Providers$GuicifiedProviderWithDependencies.initialize(Providers.java:149)
	at com.google.inject.util.Providers$GuicifiedProviderWithDependencies$$FastClassByGuice$$2a7177aa.invoke(<generated>)
	at com.google.inject.internal.SingleMethodInjector$1.invoke(SingleMethodInjector.java:54)
	at com.google.inject.internal.SingleMethodInjector.inject(SingleMethodInjector.java:89)
	at com.google.inject.internal.MembersInjectorImpl.injectMembers(MembersInjectorImpl.java:132)
	at com.google.inject.internal.MembersInjectorImpl$1.call(MembersInjectorImpl.java:93)
	at com.google.inject.internal.MembersInjectorImpl$1.call(MembersInjectorImpl.java:80)
	at com.google.inject.internal.InjectorImpl.callInContext(InjectorImpl.java:1085)
	at com.google.inject.internal.MembersInjectorImpl.injectAndNotify(MembersInjectorImpl.java:80)
	at com.google.inject.internal.Initializer$InjectableReference.get(Initializer.java:223)
	at com.google.inject.internal.Initializer.injectAll(Initializer.java:132)
	at com.google.inject.internal.InternalInjectorCreator.injectDynamically(InternalInjectorCreator.java:174)
	at com.google.inject.internal.InternalInjectorCreator.build(InternalInjectorCreator.java:110)
	at com.google.inject.Guice.createInjector(Guice.java:99)
	at com.google.inject.Guice.createInjector(Guice.java:84)
	at play.api.inject.guice.GuiceBuilder.injector(GuiceInjectorBuilder.scala:185)
	at play.api.inject.guice.GuiceApplicationBuilder.build(GuiceApplicationBuilder.scala:137)
	at play.api.inject.guice.GuiceApplicationLoader.load(GuiceApplicationLoader.scala:21)
	at play.core.server.DevServerStart$$anon$1.$anonfun$reload$3(DevServerStart.scala:174)
	at play.utils.Threads$.withContextClassLoader(Threads.scala:21)
	at play.core.server.DevServerStart$$anon$1.reload(DevServerStart.scala:171)
	at play.core.server.DevServerStart$$anon$1.get(DevServerStart.scala:124)
	at play.core.server.AkkaHttpServer.modelConversion(AkkaHttpServer.scala:183)
	at play.core.server.AkkaHttpServer.handleRequest(AkkaHttpServer.scala:189)
	at play.core.server.AkkaHttpServer.$anonfun$createServerBinding$1(AkkaHttpServer.scala:106)
	at akka.stream.impl.fusing.MapAsync$$anon$24.onPush(Ops.scala:1191)
	at akka.stream.impl.fusing.GraphInterpreter.processPush(GraphInterpreter.scala:512)
	at akka.stream.impl.fusing.GraphInterpreter.processEvent(GraphInterpreter.scala:475)
	at akka.stream.impl.fusing.GraphInterpreter.execute(GraphInterpreter.scala:371)
	at akka.stream.impl.fusing.GraphInterpreterShell.runBatch(ActorGraphInterpreter.scala:584)
	at akka.stream.impl.fusing.GraphInterpreterShell$AsyncInput.execute(ActorGraphInterpreter.scala:468)
	at akka.stream.impl.fusing.GraphInterpreterShell.processEvent(ActorGraphInterpreter.scala:559)
	at akka.stream.impl.fusing.ActorGraphInterpreter.akka$stream$impl$fusing$ActorGraphInterpreter$$processEvent(ActorGraphInterpreter.scala:741)
	at akka.stream.impl.fusing.ActorGraphInterpreter$$anonfun$receive$1.applyOrElse(ActorGraphInterpreter.scala:756)
	at akka.actor.Actor.aroundReceive(Actor.scala:517)
	at akka.actor.Actor.aroundReceive$(Actor.scala:515)
	at akka.stream.impl.fusing.ActorGraphInterpreter.aroundReceive(ActorGraphInterpreter.scala:666)
	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:527)
	at akka.actor.ActorCell.invoke(ActorCell.scala:496)
	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257)
	at akka.dispatch.Mailbox.run(Mailbox.scala:224)
	at akka.dispatch.Mailbox.exec(Mailbox.scala:234)
	at akka.dispatch.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260)
	at akka.dispatch.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339)
	at akka.dispatch.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979)
	at akka.dispatch.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107)
Caused by: org.h2.jdbc.JdbcSQLException: The connection was not closed by the application and is garbage collected [90018-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	... 99 more
2018-03-12 03:52:32 jdbc[67]: null
org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-193]
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:184)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:126)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:99)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:117)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:123)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:375)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:204)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:459)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:533)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:114)
	at com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:82)
	at play.api.db.HikariCPConnectionPool.$anonfun$create$1(HikariCPModule.scala:51)
	at scala.util.Try$.apply(Try.scala:209)
	at play.api.db.HikariCPConnectionPool.create(HikariCPModule.scala:47)
	at play.api.db.PooledDatabase.createDataSource(Databases.scala:199)
	at play.api.db.DefaultDatabase.dataSource$lzycompute(Databases.scala:123)
	at play.api.db.DefaultDatabase.dataSource(Databases.scala:121)
	at play.api.db.DefaultDatabase.getConnection(Databases.scala:142)
	at play.api.db.DefaultDatabase.getConnection(Databases.scala:138)
	at play.api.db.DefaultDBApi.$anonfun$connect$1(DefaultDBApi.scala:44)
	at play.api.db.DefaultDBApi.$anonfun$connect$1$adapted(DefaultDBApi.scala:42)
	at scala.collection.immutable.List.foreach(List.scala:389)
	at play.api.db.DefaultDBApi.connect(DefaultDBApi.scala:42)
	at play.api.db.DBApiProvider.get$lzycompute(DBModule.scala:86)
	at play.api.db.DBApiProvider.get(DBModule.scala:75)
	at play.api.db.DBApiProvider.get(DBModule.scala:56)
	at com.google.inject.internal.ProviderInternalFactory.provision(ProviderInternalFactory.java:81)
	at com.google.inject.internal.BoundProviderFactory.provision(BoundProviderFactory.java:72)
	at com.google.inject.internal.ProviderInternalFactory.circularGet(ProviderInternalFactory.java:61)
	at com.google.inject.internal.BoundProviderFactory.get(BoundProviderFactory.java:62)
	at com.google.inject.internal.SingleParameterInjector.inject(SingleParameterInjector.java:38)
	at com.google.inject.internal.SingleParameterInjector.getAll(SingleParameterInjector.java:62)
	at com.google.inject.internal.ConstructorInjector.provision(ConstructorInjector.java:110)
	at com.google.inject.internal.ConstructorInjector.construct(ConstructorInjector.java:90)
	at com.google.inject.internal.ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:268)
	at com.google.inject.internal.ProviderToInternalFactoryAdapter$1.call(ProviderToInternalFactoryAdapter.java:46)
	at com.google.inject.internal.InjectorImpl.callInContext(InjectorImpl.java:1092)
	at com.google.inject.internal.ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
	at com.google.inject.internal.SingletonScope$1.get(SingletonScope.java:194)
	at com.google.inject.internal.InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:41)
	at com.google.inject.internal.FactoryProxy.get(FactoryProxy.java:56)
	at com.google.inject.internal.SingleFieldInjector.inject(SingleFieldInjector.java:54)
	at com.google.inject.internal.MembersInjectorImpl.injectMembers(MembersInjectorImpl.java:132)
	at com.google.inject.internal.MembersInjectorImpl$1.call(MembersInjectorImpl.java:93)
	at com.google.inject.internal.MembersInjectorImpl$1.call(MembersInjectorImpl.java:80)
	at com.google.inject.internal.InjectorImpl.callInContext(InjectorImpl.java:1092)
	at com.google.inject.internal.MembersInjectorImpl.injectAndNotify(MembersInjectorImpl.java:80)
	at com.google.inject.internal.MembersInjectorImpl.injectMembers(MembersInjectorImpl.java:62)
	at com.google.inject.internal.InjectorImpl.injectMembers(InjectorImpl.java:987)
	at com.google.inject.util.Providers$GuicifiedProviderWithDependencies.initialize(Providers.java:149)
	at com.google.inject.util.Providers$GuicifiedProviderWithDependencies$$FastClassByGuice$$2a7177aa.invoke(<generated>)
	at com.google.inject.internal.SingleMethodInjector$1.invoke(SingleMethodInjector.java:54)
	at com.google.inject.internal.SingleMethodInjector.inject(SingleMethodInjector.java:89)
	at com.google.inject.internal.MembersInjectorImpl.injectMembers(MembersInjectorImpl.java:132)
	at com.google.inject.internal.MembersInjectorImpl$1.call(MembersInjectorImpl.java:93)
	at com.google.inject.internal.MembersInjectorImpl$1.call(MembersInjectorImpl.java:80)
	at com.google.inject.internal.InjectorImpl.callInContext(InjectorImpl.java:1085)
	at com.google.inject.internal.MembersInjectorImpl.injectAndNotify(MembersInjectorImpl.java:80)
	at com.google.inject.internal.Initializer$InjectableReference.get(Initializer.java:223)
	at com.google.inject.internal.Initializer.injectAll(Initializer.java:132)
	at com.google.inject.internal.InternalInjectorCreator.injectDynamically(InternalInjectorCreator.java:174)
	at com.google.inject.internal.InternalInjectorCreator.build(InternalInjectorCreator.java:110)
	at com.google.inject.Guice.createInjector(Guice.java:99)
	at com.google.inject.Guice.createInjector(Guice.java:84)
	at play.api.inject.guice.GuiceBuilder.injector(GuiceInjectorBuilder.scala:185)
	at play.api.inject.guice.GuiceApplicationBuilder.build(GuiceApplicationBuilder.scala:137)
	at play.api.inject.guice.GuiceApplicationLoader.load(GuiceApplicationLoader.scala:21)
	at play.core.server.DevServerStart$$anon$1.$anonfun$reload$3(DevServerStart.scala:174)
	at play.utils.Threads$.withContextClassLoader(Threads.scala:21)
	at play.core.server.DevServerStart$$anon$1.reload(DevServerStart.scala:171)
	at play.core.server.DevServerStart$$anon$1.get(DevServerStart.scala:124)
	at play.core.server.AkkaHttpServer.modelConversion(AkkaHttpServer.scala:183)
	at play.core.server.AkkaHttpServer.handleRequest(AkkaHttpServer.scala:189)
	at play.core.server.AkkaHttpServer.$anonfun$createServerBinding$1(AkkaHttpServer.scala:106)
	at akka.stream.impl.fusing.MapAsync$$anon$24.onPush(Ops.scala:1191)
	at akka.stream.impl.fusing.GraphInterpreter.processPush(GraphInterpreter.scala:512)
	at akka.stream.impl.fusing.GraphInterpreter.processEvent(GraphInterpreter.scala:475)
	at akka.stream.impl.fusing.GraphInterpreter.execute(GraphInterpreter.scala:371)
	at akka.stream.impl.fusing.GraphInterpreterShell.runBatch(ActorGraphInterpreter.scala:584)
	at akka.stream.impl.fusing.GraphInterpreterShell$AsyncInput.execute(ActorGraphInterpreter.scala:468)
	at akka.stream.impl.fusing.GraphInterpreterShell.processEvent(ActorGraphInterpreter.scala:559)
	at akka.stream.impl.fusing.ActorGraphInterpreter.akka$stream$impl$fusing$ActorGraphInterpreter$$processEvent(ActorGraphInterpreter.scala:741)
	at akka.stream.impl.fusing.ActorGraphInterpreter$$anonfun$receive$1.applyOrElse(ActorGraphInterpreter.scala:756)
	at akka.actor.Actor.aroundReceive(Actor.scala:517)
	at akka.actor.Actor.aroundReceive$(Actor.scala:515)
	at akka.stream.impl.fusing.ActorGraphInterpreter.aroundReceive(ActorGraphInterpreter.scala:666)
	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:527)
	at akka.actor.ActorCell.invoke(ActorCell.scala:496)
	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257)
	at akka.dispatch.Mailbox.run(Mailbox.scala:224)
	at akka.dispatch.Mailbox.exec(Mailbox.scala:234)
	at akka.dispatch.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260)
	at akka.dispatch.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339)
	at akka.dispatch.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979)
	at akka.dispatch.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107)
Caused by: org.h2.jdbc.JdbcSQLException: The connection was not closed by the application and is garbage collected [90018-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	... 99 more
2018-03-12 03:52:32 jdbc[67]: null
org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-193]
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:184)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:126)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:99)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:117)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:123)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:375)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:204)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:459)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:533)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:114)
	at com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:82)
	at play.api.db.HikariCPConnectionPool.$anonfun$create$1(HikariCPModule.scala:51)
	at scala.util.Try$.apply(Try.scala:209)
	at play.api.db.HikariCPConnectionPool.create(HikariCPModule.scala:47)
	at play.api.db.PooledDatabase.createDataSource(Databases.scala:199)
	at play.api.db.DefaultDatabase.dataSource$lzycompute(Databases.scala:123)
	at play.api.db.DefaultDatabase.dataSource(Databases.scala:121)
	at play.api.db.DefaultDatabase.getConnection(Databases.scala:142)
	at play.api.db.DefaultDatabase.getConnection(Databases.scala:138)
	at play.api.db.DefaultDBApi.$anonfun$connect$1(DefaultDBApi.scala:44)
	at play.api.db.DefaultDBApi.$anonfun$connect$1$adapted(DefaultDBApi.scala:42)
	at scala.collection.immutable.List.foreach(List.scala:389)
	at play.api.db.DefaultDBApi.connect(DefaultDBApi.scala:42)
	at play.api.db.DBApiProvider.get$lzycompute(DBModule.scala:86)
	at play.api.db.DBApiProvider.get(DBModule.scala:75)
	at play.api.db.DBApiProvider.get(DBModule.scala:56)
	at com.google.inject.internal.ProviderInternalFactory.provision(ProviderInternalFactory.java:81)
	at com.google.inject.internal.BoundProviderFactory.provision(BoundProviderFactory.java:72)
	at com.google.inject.internal.ProviderInternalFactory.circularGet(ProviderInternalFactory.java:61)
	at com.google.inject.internal.BoundProviderFactory.get(BoundProviderFactory.java:62)
	at com.google.inject.internal.SingleParameterInjector.inject(SingleParameterInjector.java:38)
	at com.google.inject.internal.SingleParameterInjector.getAll(SingleParameterInjector.java:62)
	at com.google.inject.internal.ConstructorInjector.provision(ConstructorInjector.java:110)
	at com.google.inject.internal.ConstructorInjector.construct(ConstructorInjector.java:90)
	at com.google.inject.internal.ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:268)
	at com.google.inject.internal.ProviderToInternalFactoryAdapter$1.call(ProviderToInternalFactoryAdapter.java:46)
	at com.google.inject.internal.InjectorImpl.callInContext(InjectorImpl.java:1092)
	at com.google.inject.internal.ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
	at com.google.inject.internal.SingletonScope$1.get(SingletonScope.java:194)
	at com.google.inject.internal.InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:41)
	at com.google.inject.internal.FactoryProxy.get(FactoryProxy.java:56)
	at com.google.inject.internal.SingleFieldInjector.inject(SingleFieldInjector.java:54)
	at com.google.inject.internal.MembersInjectorImpl.injectMembers(MembersInjectorImpl.java:132)
	at com.google.inject.internal.MembersInjectorImpl$1.call(MembersInjectorImpl.java:93)
	at com.google.inject.internal.MembersInjectorImpl$1.call(MembersInjectorImpl.java:80)
	at com.google.inject.internal.InjectorImpl.callInContext(InjectorImpl.java:1092)
	at com.google.inject.internal.MembersInjectorImpl.injectAndNotify(MembersInjectorImpl.java:80)
	at com.google.inject.internal.MembersInjectorImpl.injectMembers(MembersInjectorImpl.java:62)
	at com.google.inject.internal.InjectorImpl.injectMembers(InjectorImpl.java:987)
	at com.google.inject.util.Providers$GuicifiedProviderWithDependencies.initialize(Providers.java:149)
	at com.google.inject.util.Providers$GuicifiedProviderWithDependencies$$FastClassByGuice$$2a7177aa.invoke(<generated>)
	at com.google.inject.internal.SingleMethodInjector$1.invoke(SingleMethodInjector.java:54)
	at com.google.inject.internal.SingleMethodInjector.inject(SingleMethodInjector.java:89)
	at com.google.inject.internal.MembersInjectorImpl.injectMembers(MembersInjectorImpl.java:132)
	at com.google.inject.internal.MembersInjectorImpl$1.call(MembersInjectorImpl.java:93)
	at com.google.inject.internal.MembersInjectorImpl$1.call(MembersInjectorImpl.java:80)
	at com.google.inject.internal.InjectorImpl.callInContext(InjectorImpl.java:1085)
	at com.google.inject.internal.MembersInjectorImpl.injectAndNotify(MembersInjectorImpl.java:80)
	at com.google.inject.internal.Initializer$InjectableReference.get(Initializer.java:223)
	at com.google.inject.internal.Initializer.injectAll(Initializer.java:132)
	at com.google.inject.internal.InternalInjectorCreator.injectDynamically(InternalInjectorCreator.java:174)
	at com.google.inject.internal.InternalInjectorCreator.build(InternalInjectorCreator.java:110)
	at com.google.inject.Guice.createInjector(Guice.java:99)
	at com.google.inject.Guice.createInjector(Guice.java:84)
	at play.api.inject.guice.GuiceBuilder.injector(GuiceInjectorBuilder.scala:185)
	at play.api.inject.guice.GuiceApplicationBuilder.build(GuiceApplicationBuilder.scala:137)
	at play.api.inject.guice.GuiceApplicationLoader.load(GuiceApplicationLoader.scala:21)
	at play.core.server.DevServerStart$$anon$1.$anonfun$reload$3(DevServerStart.scala:174)
	at play.utils.Threads$.withContextClassLoader(Threads.scala:21)
	at play.core.server.DevServerStart$$anon$1.reload(DevServerStart.scala:171)
	at play.core.server.DevServerStart$$anon$1.get(DevServerStart.scala:124)
	at play.core.server.AkkaHttpServer.modelConversion(AkkaHttpServer.scala:183)
	at play.core.server.AkkaHttpServer.handleRequest(AkkaHttpServer.scala:189)
	at play.core.server.AkkaHttpServer.$anonfun$createServerBinding$1(AkkaHttpServer.scala:106)
	at akka.stream.impl.fusing.MapAsync$$anon$24.onPush(Ops.scala:1191)
	at akka.stream.impl.fusing.GraphInterpreter.processPush(GraphInterpreter.scala:512)
	at akka.stream.impl.fusing.GraphInterpreter.processEvent(GraphInterpreter.scala:475)
	at akka.stream.impl.fusing.GraphInterpreter.execute(GraphInterpreter.scala:371)
	at akka.stream.impl.fusing.GraphInterpreterShell.runBatch(ActorGraphInterpreter.scala:584)
	at akka.stream.impl.fusing.GraphInterpreterShell$AsyncInput.execute(ActorGraphInterpreter.scala:468)
	at akka.stream.impl.fusing.GraphInterpreterShell.processEvent(ActorGraphInterpreter.scala:559)
	at akka.stream.impl.fusing.ActorGraphInterpreter.akka$stream$impl$fusing$ActorGraphInterpreter$$processEvent(ActorGraphInterpreter.scala:741)
	at akka.stream.impl.fusing.ActorGraphInterpreter$$anonfun$receive$1.applyOrElse(ActorGraphInterpreter.scala:756)
	at akka.actor.Actor.aroundReceive(Actor.scala:517)
	at akka.actor.Actor.aroundReceive$(Actor.scala:515)
	at akka.stream.impl.fusing.ActorGraphInterpreter.aroundReceive(ActorGraphInterpreter.scala:666)
	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:527)
	at akka.actor.ActorCell.invoke(ActorCell.scala:496)
	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257)
	at akka.dispatch.Mailbox.run(Mailbox.scala:224)
	at akka.dispatch.Mailbox.exec(Mailbox.scala:234)
	at akka.dispatch.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260)
	at akka.dispatch.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339)
	at akka.dispatch.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979)
	at akka.dispatch.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107)
Caused by: org.h2.jdbc.JdbcSQLException: The connection was not closed by the application and is garbage collected [90018-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	... 99 more
